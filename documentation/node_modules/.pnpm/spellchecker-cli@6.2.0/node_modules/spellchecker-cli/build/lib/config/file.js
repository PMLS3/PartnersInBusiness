import { accessSync, readFileSync } from 'fs';
import { extname, resolve } from 'path';
import yaml from 'js-yaml';
import { jsonc } from 'jsonc';
import { packageDirectorySync } from 'pkg-dir';
import { printError } from '../print-error.js';
var tryLoad = function (filePath) {
    var result;
    try {
        var fileContents = readFileSync(filePath, 'utf8');
        var extension = extname(filePath).slice(1);
        if (extension === 'yaml' || extension === 'yml') {
            result = yaml.load(fileContents);
        }
        else {
            // extension is "json" or "jsonc"
            result = jsonc.parse(fileContents);
        }
    }
    catch (e) {
        printError("Failed to read config file at ".concat(filePath, ". Error: ").concat(e));
        process.exit(1);
    }
    return result;
};
export var readConfigFile = function (filePathFromArgs) {
    var _a;
    if (filePathFromArgs) {
        return tryLoad(filePathFromArgs);
    }
    var packageDirectory = (_a = packageDirectorySync()) !== null && _a !== void 0 ? _a : process.cwd();
    var filePath = [
        './.spellcheckerrc.yaml',
        './.spellcheckerrc.yml',
        './.spellcheckerrc.json',
        './.spellcheckerrc.jsonc',
    ]
        .map(function (fileName) { return resolve(packageDirectory, fileName); })
        .find(function (path) {
        try {
            accessSync(path);
        }
        catch (e) {
            return false;
        }
        return true;
    });
    return filePath ? tryLoad(filePath) : {};
};
