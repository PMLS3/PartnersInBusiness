/**
 * Classify emoji (üëç) and Gemoji (GitHub emoji, :+1:) in `node` as
 * `Emoticon`s.
 *
 * @template {Sentence} NodeType
 *   Node type.
 * @param {NodeType} node
 *   Sentence to transform.
 * @returns {NodeType}
 *   Given, transformed, node.
 */
export function emojiModifier<NodeType extends import('nlcst').Sentence>(
  node: NodeType
): NodeType
export type UnistParent = import('unist').Parent
export type Point = import('unist').Point
export type Sentence = import('nlcst').Sentence
export type SentenceContent = import('nlcst').SentenceContent
export type WordContent = import('nlcst').WordContent
export type Emoticon = import('nlcst-emoticon-modifier').Emoticon
export type DeepSentenceContent = SentenceContent | WordContent
export type DeepSentenceContentParent = Extract<
  Sentence | DeepSentenceContent,
  UnistParent
>
export type DeepSentenceContentLeaf = Exclude<DeepSentenceContent, UnistParent>
export type FindMatch = {
  start: number
  end: number
}
export type ChangeResult = {
  end: number
  nodes: Array<DeepSentenceContent>
}
